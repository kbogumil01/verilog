/* Generated by Yosys 0.10+1 (git sha1 UNKNOWN, gcc 11.2.1 -O2 -fexceptions -fstack-protector-strong -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fPIC -Os) */

module \$paramod$8c512a4640814fe56708630ae6c585cda538d971\crc4 (i_data, i_poly, i_crc, o_crc);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire [12:0] crc_tmp;
  input [3:0] i_crc;
  input [8:0] i_data;
  input [4:0] i_poly;
  output [3:0] o_crc;
  wire [3:0] poly_tmp;
  assign _000_ = i_data[8] & i_poly[2];
  assign _001_ = i_data[6] ^ _000_;
  assign _002_ = i_data[8] & i_poly[3];
  assign _003_ = i_data[7] ^ _002_;
  assign _004_ = i_poly[3] & _003_;
  assign _005_ = _001_ ^ _004_;
  assign _006_ = i_poly[3] & _005_;
  assign _007_ = i_data[8] & i_poly[1];
  assign _008_ = i_data[5] ^ _007_;
  assign _009_ = i_poly[2] & _003_;
  assign _010_ = _008_ ^ _009_;
  assign _011_ = _006_ ^ _010_;
  assign _012_ = i_poly[3] & _011_;
  assign _013_ = i_poly[2] & _005_;
  assign _014_ = i_poly[0] & i_data[8];
  assign _015_ = i_data[4] ^ _014_;
  assign _016_ = i_poly[1] & _003_;
  assign _017_ = _015_ ^ _016_;
  assign _018_ = _013_ ^ _017_;
  assign _019_ = _012_ ^ _018_;
  assign _020_ = i_poly[3] & _019_;
  assign _021_ = i_poly[2] & _011_;
  assign _022_ = i_poly[1] & _005_;
  assign _023_ = i_poly[0] & _003_;
  assign _024_ = i_data[3] ^ _023_;
  assign _025_ = _022_ ^ _024_;
  assign _026_ = _021_ ^ _025_;
  assign _027_ = _020_ ^ _026_;
  assign _028_ = i_poly[3] & _027_;
  assign _029_ = i_poly[2] & _019_;
  assign _030_ = i_poly[1] & _011_;
  assign _031_ = i_poly[0] & _005_;
  assign _032_ = i_data[2] ^ _031_;
  assign _033_ = _030_ ^ _032_;
  assign _034_ = _029_ ^ _033_;
  assign _035_ = _028_ ^ _034_;
  assign _036_ = i_poly[3] & _035_;
  assign _037_ = i_poly[2] & _027_;
  assign _038_ = i_poly[1] & _019_;
  assign _039_ = i_poly[0] & _011_;
  assign _040_ = i_data[1] ^ _039_;
  assign _041_ = _038_ ^ _040_;
  assign _042_ = _037_ ^ _041_;
  assign _043_ = _036_ ^ _042_;
  assign _044_ = i_poly[3] & _043_;
  assign _045_ = i_poly[2] & _035_;
  assign _046_ = i_poly[1] & _027_;
  assign _047_ = i_poly[0] & _019_;
  assign _048_ = i_data[0] ^ _047_;
  assign _049_ = _046_ ^ _048_;
  assign _050_ = _045_ ^ _049_;
  assign _051_ = _044_ ^ _050_;
  assign _052_ = i_poly[0] & _051_;
  assign o_crc[0] = i_crc[0] ^ _052_;
  assign _053_ = i_poly[1] & _051_;
  assign _054_ = i_poly[0] & _043_;
  assign _055_ = i_crc[1] ^ _054_;
  assign o_crc[1] = _053_ ^ _055_;
  assign _056_ = i_poly[2] & _051_;
  assign _057_ = i_poly[1] & _043_;
  assign _058_ = i_poly[0] & _035_;
  assign _059_ = i_crc[2] ^ _058_;
  assign _060_ = _057_ ^ _059_;
  assign o_crc[2] = _056_ ^ _060_;
  assign _061_ = i_poly[3] & _051_;
  assign _062_ = i_poly[2] & _043_;
  assign _063_ = i_poly[1] & _035_;
  assign _064_ = i_poly[0] & _027_;
  assign _065_ = i_crc[3] ^ _064_;
  assign _066_ = _063_ ^ _065_;
  assign _067_ = _062_ ^ _066_;
  assign o_crc[3] = _061_ ^ _067_;
  assign crc_tmp = { 9'hxxx, o_crc };
  assign poly_tmp = i_poly[4:1];
endmodule

module \$paramod$c9a09743ea5afa802f8298da4bb6a02b624bef2c\crc3 (i_data, i_poly, i_crc, o_crc);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire [11:0] crc_tmp;
  input [2:0] i_crc;
  input [8:0] i_data;
  input [3:0] i_poly;
  output [2:0] o_crc;
  wire [2:0] poly_tmp;
  assign _000_ = i_poly[1] & i_data[8];
  assign _001_ = i_data[6] ^ _000_;
  assign _002_ = i_data[8] & i_poly[2];
  assign _003_ = i_data[7] ^ _002_;
  assign _004_ = i_poly[2] & _003_;
  assign _005_ = _001_ ^ _004_;
  assign _006_ = i_poly[2] & _005_;
  assign _007_ = i_data[8] & i_poly[0];
  assign _008_ = i_data[5] ^ _007_;
  assign _009_ = i_poly[1] & _003_;
  assign _010_ = _008_ ^ _009_;
  assign _011_ = _006_ ^ _010_;
  assign _012_ = i_poly[2] & _011_;
  assign _013_ = i_poly[1] & _005_;
  assign _014_ = i_poly[0] & _003_;
  assign _015_ = i_data[4] ^ _014_;
  assign _016_ = _013_ ^ _015_;
  assign _017_ = _012_ ^ _016_;
  assign _018_ = i_poly[2] & _017_;
  assign _019_ = i_poly[1] & _011_;
  assign _020_ = i_poly[0] & _005_;
  assign _021_ = i_data[3] ^ _020_;
  assign _022_ = _019_ ^ _021_;
  assign _023_ = _018_ ^ _022_;
  assign _024_ = i_poly[2] & _023_;
  assign _025_ = i_poly[1] & _017_;
  assign _026_ = i_poly[0] & _011_;
  assign _027_ = i_data[2] ^ _026_;
  assign _028_ = _025_ ^ _027_;
  assign _029_ = _024_ ^ _028_;
  assign _030_ = i_poly[2] & _029_;
  assign _031_ = i_poly[1] & _023_;
  assign _032_ = i_poly[0] & _017_;
  assign _033_ = i_data[1] ^ _032_;
  assign _034_ = _031_ ^ _033_;
  assign _035_ = _030_ ^ _034_;
  assign _036_ = i_poly[2] & _035_;
  assign _037_ = i_poly[1] & _029_;
  assign _038_ = i_poly[0] & _023_;
  assign _039_ = i_data[0] ^ _038_;
  assign _040_ = _037_ ^ _039_;
  assign _041_ = _036_ ^ _040_;
  assign _042_ = i_poly[0] & _041_;
  assign o_crc[0] = i_crc[0] ^ _042_;
  assign _043_ = i_poly[1] & _041_;
  assign _044_ = i_poly[0] & _035_;
  assign _045_ = i_crc[1] ^ _044_;
  assign o_crc[1] = _043_ ^ _045_;
  assign _046_ = i_poly[2] & _041_;
  assign _047_ = i_poly[1] & _035_;
  assign _048_ = i_poly[0] & _029_;
  assign _049_ = i_crc[2] ^ _048_;
  assign _050_ = _047_ ^ _049_;
  assign o_crc[2] = _046_ ^ _050_;
  assign crc_tmp = { 9'hxxx, o_crc };
  assign poly_tmp = i_poly[3:1];
endmodule

module \$paramod\arythm_shift\BITS=s32'00000000000000000000000000001001 (i_a, i_b, o_output);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  input [8:0] i_a;
  input [8:0] i_b;
  output [8:0] o_output;
  assign _027_ = ~i_b[0];
  assign _028_ = ~i_b[1];
  assign _029_ = ~i_b[2];
  assign _030_ = ~i_b[3];
  assign _031_ = ~i_b[4];
  assign _032_ = i_b[6] | i_b[5];
  assign _033_ = ~_032_;
  assign _034_ = i_b[8] | i_b[7];
  assign _035_ = ~_034_;
  assign _036_ = _033_ & _035_;
  assign _037_ = _032_ | _034_;
  assign _038_ = i_a[8] & _037_;
  assign _039_ = i_a[4] & _036_;
  assign _040_ = _038_ | _039_;
  assign _041_ = _027_ & _040_;
  assign _042_ = i_a[5] & _036_;
  assign _043_ = _038_ | _042_;
  assign _044_ = i_b[0] & _043_;
  assign _045_ = _041_ | _044_;
  assign _046_ = _028_ & _045_;
  assign _047_ = i_a[6] & _036_;
  assign _048_ = _038_ | _047_;
  assign _049_ = _027_ & _048_;
  assign _050_ = i_a[7] & _036_;
  assign _051_ = _038_ | _050_;
  assign _052_ = i_b[0] & _051_;
  assign _053_ = _049_ | _052_;
  assign _054_ = i_b[1] & _053_;
  assign _055_ = _046_ | _054_;
  assign _056_ = _030_ & _031_;
  assign _057_ = i_b[3] | i_b[4];
  assign _058_ = i_b[2] & _056_;
  assign _059_ = _055_ & _058_;
  assign _060_ = i_a[8] & _057_;
  assign _061_ = i_a[3] & _036_;
  assign _062_ = _027_ | _061_;
  assign _063_ = i_a[2] & _036_;
  assign _064_ = i_b[0] | _063_;
  assign _065_ = _062_ & _064_;
  assign _066_ = _038_ | _065_;
  assign _067_ = _028_ | _066_;
  assign _068_ = i_b[1] | _038_;
  assign _069_ = i_a[0] | i_b[0];
  assign _070_ = i_a[1] | _027_;
  assign _071_ = _069_ & _070_;
  assign _072_ = _036_ & _071_;
  assign _073_ = i_a[1] & _036_;
  assign _074_ = _068_ | _072_;
  assign _075_ = _029_ & _056_;
  assign _076_ = ~_075_;
  assign _077_ = _074_ & _075_;
  assign _078_ = _067_ & _077_;
  assign _079_ = _060_ | _078_;
  assign o_output[0] = _059_ | _079_;
  assign _080_ = _027_ & _043_;
  assign _081_ = i_b[0] & _048_;
  assign _082_ = _080_ | _081_;
  assign _083_ = _028_ & _082_;
  assign _084_ = i_a[8] & i_b[0];
  assign _085_ = _027_ & _051_;
  assign _086_ = _084_ | _085_;
  assign _087_ = i_b[1] & _086_;
  assign _088_ = _083_ | _087_;
  assign _089_ = _058_ & _088_;
  assign _090_ = _038_ | _061_;
  assign _091_ = _027_ & _090_;
  assign _092_ = i_b[0] & _040_;
  assign _093_ = _091_ | _092_;
  assign _094_ = _028_ | _093_;
  assign _095_ = _027_ & _073_;
  assign _096_ = i_b[0] & _063_;
  assign _097_ = _095_ | _096_;
  assign _098_ = _068_ | _097_;
  assign _000_ = _075_ & _098_;
  assign _001_ = _094_ & _000_;
  assign _002_ = _060_ | _001_;
  assign o_output[1] = _089_ | _002_;
  assign _003_ = _028_ & _053_;
  assign _004_ = i_a[8] & i_b[1];
  assign _005_ = _003_ | _004_;
  assign _006_ = _028_ | _045_;
  assign _007_ = i_b[1] | _066_;
  assign _008_ = _029_ & _007_;
  assign _009_ = _006_ & _008_;
  assign _010_ = i_b[2] & _005_;
  assign _011_ = _009_ | _010_;
  assign _012_ = _056_ & _011_;
  assign o_output[2] = _060_ | _012_;
  assign _013_ = _028_ & _086_;
  assign _014_ = _004_ | _013_;
  assign _015_ = _029_ | _014_;
  assign _016_ = i_b[1] | _093_;
  assign _017_ = _028_ | _082_;
  assign _018_ = _016_ & _017_;
  assign _019_ = i_b[2] | _018_;
  assign _020_ = _056_ & _019_;
  assign _021_ = _015_ & _020_;
  assign o_output[3] = _060_ | _021_;
  assign _022_ = _055_ & _075_;
  assign _023_ = i_a[8] & _076_;
  assign o_output[4] = _022_ | _023_;
  assign _024_ = _075_ & _088_;
  assign o_output[5] = _023_ | _024_;
  assign _025_ = _075_ & _005_;
  assign o_output[6] = _023_ | _025_;
  assign _026_ = _075_ & _014_;
  assign o_output[7] = _023_ | _026_;
  assign o_output[8] = i_a[8];
endmodule

module \$paramod\binary2onehot\BITS=s32'00000000000000000000000000001001 (i_nkb, o_onehot, o_overflow);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  input [8:0] i_nkb;
  output [8:0] o_onehot;
  output o_overflow;
  assign _00_ = ~i_nkb[3];
  assign _01_ = ~i_nkb[2];
  assign _02_ = ~i_nkb[0];
  assign _03_ = ~i_nkb[1];
  assign _04_ = i_nkb[8] | i_nkb[7];
  assign _05_ = ~_04_;
  assign _06_ = i_nkb[6] | i_nkb[5];
  assign _07_ = i_nkb[4] | _06_;
  assign _08_ = ~_07_;
  assign _09_ = _05_ & _08_;
  assign _10_ = _04_ | _07_;
  assign _11_ = _02_ & _09_;
  assign _12_ = i_nkb[0] | _10_;
  assign _13_ = _03_ & _11_;
  assign _14_ = i_nkb[1] | _12_;
  assign _15_ = _00_ | i_nkb[2];
  assign _16_ = _14_ | _15_;
  assign o_onehot[8] = ~_16_;
  assign _17_ = _00_ & _01_;
  assign o_onehot[0] = _13_ & _17_;
  assign _18_ = i_nkb[0] & _09_;
  assign _19_ = _03_ & _18_;
  assign o_onehot[1] = _17_ & _19_;
  assign _20_ = i_nkb[1] & _11_;
  assign o_onehot[2] = _17_ & _20_;
  assign _21_ = i_nkb[1] & _18_;
  assign o_onehot[3] = _17_ & _21_;
  assign _22_ = _00_ & i_nkb[2];
  assign o_onehot[4] = _13_ & _22_;
  assign o_onehot[5] = _19_ & _22_;
  assign o_onehot[6] = _20_ & _22_;
  assign o_onehot[7] = _21_ & _22_;
  assign _23_ = i_nkb[3] | _10_;
  assign o_overflow = _16_ & _23_;
endmodule

module \$paramod\count_0\BITS=s32'00000000000000000000000000001001 (i_input1, i_input2, o_output, o_overflow);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  input [8:0] i_input1;
  input [8:0] i_input2;
  output [8:0] o_output;
  output o_overflow;
  assign _048_ = ~i_input2[3];
  assign _049_ = ~i_input2[5];
  assign _050_ = ~i_input2[6];
  assign _051_ = ~i_input2[7];
  assign _052_ = ~i_input2[8];
  assign _053_ = ~i_input1[3];
  assign _054_ = ~i_input1[5];
  assign _055_ = ~i_input1[7];
  assign _056_ = i_input1[1] | i_input1[0];
  assign _057_ = i_input1[2] | _056_;
  assign _058_ = ~_057_;
  assign _059_ = i_input1[1] & i_input1[0];
  assign _060_ = i_input1[2] & _059_;
  assign _061_ = ~_060_;
  assign _062_ = i_input1[2] | _059_;
  assign _063_ = _056_ & _062_;
  assign _064_ = ~_063_;
  assign _065_ = _058_ | _063_;
  assign _066_ = _061_ & _065_;
  assign _067_ = ~_066_;
  assign _068_ = i_input1[3] & _067_;
  assign _069_ = i_input1[3] | _067_;
  assign _070_ = _053_ ^ _066_;
  assign _071_ = i_input1[4] & _069_;
  assign _072_ = _068_ | _071_;
  assign _073_ = i_input1[4] ^ _070_;
  assign _074_ = i_input1[5] | _073_;
  assign _075_ = _054_ ^ _073_;
  assign _076_ = i_input1[6] | _075_;
  assign _077_ = i_input1[6] ^ _075_;
  assign _078_ = _055_ & _077_;
  assign _079_ = _055_ ^ _077_;
  assign _080_ = ~_079_;
  assign _081_ = i_input1[8] | _080_;
  assign _082_ = ~_081_;
  assign _083_ = i_input1[8] ^ _079_;
  assign _084_ = ~_083_;
  assign _085_ = i_input2[1] | i_input2[0];
  assign _086_ = i_input2[2] | _085_;
  assign _087_ = ~_086_;
  assign _088_ = i_input2[1] & i_input2[0];
  assign _089_ = i_input2[2] & _088_;
  assign _090_ = ~_089_;
  assign _091_ = i_input2[2] | _088_;
  assign _092_ = _085_ & _091_;
  assign _093_ = ~_092_;
  assign _094_ = _086_ & _093_;
  assign _095_ = _087_ | _092_;
  assign _096_ = _089_ | _094_;
  assign _097_ = _090_ & _095_;
  assign _098_ = i_input2[3] & _096_;
  assign _099_ = i_input2[3] | _096_;
  assign _100_ = _048_ ^ _097_;
  assign _101_ = i_input2[4] & _099_;
  assign _102_ = _098_ | _101_;
  assign _103_ = i_input2[4] ^ _100_;
  assign _104_ = i_input2[5] | _103_;
  assign _105_ = _049_ ^ _103_;
  assign _106_ = i_input2[6] | _105_;
  assign _107_ = _050_ ^ _105_;
  assign _108_ = i_input2[7] | _107_;
  assign _109_ = _051_ ^ _107_;
  assign _110_ = i_input2[8] | _109_;
  assign _111_ = _052_ ^ _109_;
  assign _112_ = ~_111_;
  assign _113_ = _084_ & _112_;
  assign _114_ = _063_ & _072_;
  assign _115_ = _063_ | _072_;
  assign _116_ = _064_ ^ _072_;
  assign _117_ = _074_ & _076_;
  assign _118_ = _116_ ^ _117_;
  assign _000_ = _078_ & _118_;
  assign _001_ = _078_ ^ _118_;
  assign _002_ = _082_ & _001_;
  assign _003_ = _081_ ^ _001_;
  assign _004_ = _108_ & _110_;
  assign _005_ = _092_ & _102_;
  assign _006_ = _092_ | _102_;
  assign _007_ = _093_ ^ _102_;
  assign _008_ = ~_007_;
  assign _009_ = _104_ & _106_;
  assign _010_ = _006_ & _009_;
  assign _011_ = _008_ ^ _009_;
  assign _012_ = _007_ ^ _009_;
  assign _013_ = _004_ ^ _012_;
  assign _014_ = _003_ | _013_;
  assign _015_ = ~_014_;
  assign _016_ = _003_ ^ _013_;
  assign _017_ = _113_ & _016_;
  assign o_output[1] = _113_ ^ _016_;
  assign _018_ = _015_ | _017_;
  assign _019_ = _115_ & _117_;
  assign _020_ = _114_ | _019_;
  assign _021_ = ~_020_;
  assign _022_ = _000_ & _021_;
  assign _023_ = _000_ ^ _020_;
  assign _024_ = ~_023_;
  assign _025_ = _002_ & _024_;
  assign _026_ = _002_ ^ _024_;
  assign _027_ = _002_ ^ _023_;
  assign _028_ = _110_ | _011_;
  assign _029_ = ~_028_;
  assign _030_ = _108_ | _011_;
  assign _031_ = _005_ | _010_;
  assign _032_ = _030_ | _031_;
  assign _033_ = ~_032_;
  assign _034_ = _030_ ^ _031_;
  assign _035_ = _029_ & _034_;
  assign _036_ = _028_ ^ _034_;
  assign _037_ = ~_036_;
  assign _038_ = _026_ & _037_;
  assign _039_ = _027_ ^ _036_;
  assign _040_ = _018_ & _039_;
  assign o_output[2] = _018_ ^ _039_;
  assign _041_ = _038_ | _040_;
  assign _042_ = _022_ | _025_;
  assign _043_ = _033_ | _035_;
  assign _044_ = _042_ & _043_;
  assign _045_ = _042_ | _043_;
  assign _046_ = _042_ ^ _043_;
  assign o_output[3] = _041_ ^ _046_;
  assign _047_ = _040_ & _045_;
  assign o_output[4] = _044_ | _047_;
  assign o_output[0] = _083_ ^ _111_;
  assign o_output[8:5] = 4'h0;
  assign o_overflow = 1'h0;
endmodule

module \$paramod\fulladder\BITS=s32'00000000000000000000000000001001 (i_a, i_b, o_sum, o_carry);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  input [8:0] i_a;
  input [8:0] i_b;
  output o_carry;
  output [8:0] o_sum;
  assign _00_ = i_a[8] & i_b[8];
  assign _01_ = i_a[7] & i_b[7];
  assign _02_ = i_a[6] & i_b[6];
  assign _03_ = i_a[6] ^ i_b[6];
  assign _04_ = i_a[5] & i_b[5];
  assign _05_ = i_a[4] & i_b[4];
  assign _06_ = i_a[4] ^ i_b[4];
  assign _07_ = i_a[3] & i_b[3];
  assign _08_ = i_a[2] & i_b[2];
  assign _09_ = i_a[2] ^ i_b[2];
  assign _10_ = i_a[1] & i_b[1];
  assign _11_ = i_a[0] & i_b[0];
  assign _12_ = i_a[1] ^ i_b[1];
  assign _13_ = _11_ & _12_;
  assign _14_ = _10_ | _13_;
  assign _15_ = _09_ & _14_;
  assign _16_ = _08_ | _15_;
  assign _17_ = i_a[3] ^ i_b[3];
  assign _18_ = _16_ & _17_;
  assign _19_ = _07_ | _18_;
  assign _20_ = _06_ & _19_;
  assign _21_ = _05_ | _20_;
  assign _22_ = i_a[5] ^ i_b[5];
  assign _23_ = _21_ & _22_;
  assign _24_ = _04_ | _23_;
  assign _25_ = _03_ & _24_;
  assign _26_ = _02_ | _25_;
  assign _27_ = i_a[7] ^ i_b[7];
  assign _28_ = _26_ & _27_;
  assign _29_ = _01_ | _28_;
  assign _30_ = i_a[8] | i_b[8];
  assign _31_ = _29_ & _30_;
  assign _32_ = ~_31_;
  assign _33_ = i_a[8] ^ i_b[8];
  assign o_sum[8] = _29_ ^ _33_;
  assign _34_ = _00_ | _29_;
  assign o_carry = _32_ & _34_;
  assign o_sum[1] = _11_ ^ _12_;
  assign o_sum[2] = _09_ ^ _14_;
  assign o_sum[3] = _16_ ^ _17_;
  assign o_sum[4] = _06_ ^ _19_;
  assign o_sum[5] = _21_ ^ _22_;
  assign o_sum[6] = _03_ ^ _24_;
  assign o_sum[7] = _26_ ^ _27_;
  assign o_sum[0] = i_a[0] ^ i_b[0];
endmodule

module \$paramod\pf_nf\BITS=s32'00000000000000000000000000001001 (i_input, o_pf, o_nf);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  input [8:0] i_input;
  output o_nf;
  output o_pf;
  wire [8:0] s_counter;
  assign _00_ = ~i_input[1];
  assign _01_ = ~i_input[2];
  assign _02_ = i_input[4] ^ i_input[5];
  assign _03_ = _00_ ^ _02_;
  assign _04_ = i_input[0] ^ i_input[6];
  assign _05_ = i_input[7] ^ i_input[8];
  assign _06_ = _04_ ^ _05_;
  assign _07_ = _03_ ^ _06_;
  assign _08_ = i_input[2] ^ i_input[3];
  assign _09_ = _01_ ^ i_input[3];
  assign o_pf = _07_ ^ _09_;
  assign o_nf = _07_ ^ _08_;
  assign s_counter[0] = o_pf;
endmodule

module \$paramod\sm_to_u2\BITS=s32'00000000000000000000000000001001 (i_input, o_output);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  input [8:0] i_input;
  output [8:0] o_output;
  assign _00_ = ~i_input[8];
  assign _01_ = i_input[1] & _00_;
  assign _02_ = i_input[0] & i_input[1];
  assign _03_ = ~_02_;
  assign _04_ = i_input[0] | i_input[1];
  assign _05_ = i_input[8] & _04_;
  assign _06_ = _03_ & _05_;
  assign o_output[1] = _01_ | _06_;
  assign o_output[2] = i_input[2] ^ _05_;
  assign _07_ = i_input[2] | _04_;
  assign _08_ = i_input[8] & _07_;
  assign o_output[3] = i_input[3] ^ _08_;
  assign _09_ = i_input[3] | _07_;
  assign _10_ = i_input[8] & _09_;
  assign o_output[4] = i_input[4] ^ _10_;
  assign _11_ = i_input[4] | _09_;
  assign _12_ = i_input[8] & _11_;
  assign o_output[5] = i_input[5] ^ _12_;
  assign _13_ = i_input[8] & i_input[5];
  assign _14_ = _12_ | _13_;
  assign o_output[6] = i_input[6] ^ _14_;
  assign _15_ = i_input[8] & i_input[6];
  assign _16_ = _14_ | _15_;
  assign o_output[7] = i_input[7] ^ _16_;
  assign { o_output[8], o_output[0] } = { i_input[8], i_input[0] };
endmodule

module \$paramod\thermo2bin\LEN=s32'00000000000000000000000000001001 (i_thermo, o_nkb);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  input [8:0] i_thermo;
  output [8:0] o_nkb;
  assign _00_ = ~i_thermo[8];
  assign _01_ = ~i_thermo[2];
  assign _02_ = ~i_thermo[4];
  assign _03_ = ~i_thermo[6];
  assign _04_ = i_thermo[1] & _01_;
  assign _05_ = i_thermo[3] | _04_;
  assign _06_ = _02_ & _05_;
  assign _07_ = i_thermo[5] | _06_;
  assign _08_ = _03_ & _07_;
  assign _09_ = i_thermo[7] | _08_;
  assign o_nkb[0] = _00_ & _09_;
  assign _10_ = i_thermo[2] | i_thermo[3];
  assign _11_ = i_thermo[4] | i_thermo[5];
  assign _12_ = ~_11_;
  assign _13_ = _10_ & _12_;
  assign _14_ = i_thermo[7] | i_thermo[6];
  assign _15_ = _13_ | _14_;
  assign o_nkb[1] = _00_ & _15_;
  assign _16_ = _11_ | _14_;
  assign o_nkb[2] = _00_ & _16_;
  assign o_nkb[8:3] = { 5'h00, i_thermo[8] };
endmodule

module \$paramod\u2tou1\BITS=s32'00000000000000000000000000001001 (i_input, o_output, o_overflow);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  input [8:0] i_input;
  output [8:0] o_output;
  output o_overflow;
  assign _00_ = ~i_input[8];
  assign _01_ = ~i_input[0];
  assign _02_ = ~i_input[3];
  assign _03_ = ~i_input[4];
  assign _04_ = i_input[8] & _01_;
  assign o_output[0] = i_input[8] ^ i_input[0];
  assign _05_ = i_input[0] | i_input[1];
  assign _06_ = ~_05_;
  assign _07_ = i_input[8] & _06_;
  assign _08_ = _00_ | _05_;
  assign o_output[1] = i_input[1] ^ _04_;
  assign _09_ = i_input[2] | _08_;
  assign o_output[2] = i_input[2] ^ _07_;
  assign _10_ = i_input[2] | i_input[3];
  assign _11_ = _08_ | _10_;
  assign o_output[3] = _02_ ^ _09_;
  assign _12_ = i_input[4] | _11_;
  assign o_output[4] = _03_ ^ _11_;
  assign _13_ = i_input[4] | i_input[5];
  assign _14_ = _10_ | _13_;
  assign _15_ = ~_14_;
  assign _16_ = _07_ & _15_;
  assign _17_ = _08_ | _14_;
  assign _18_ = i_input[5] & _12_;
  assign o_output[5] = _16_ | _18_;
  assign _19_ = i_input[6] | _17_;
  assign o_output[6] = i_input[6] ^ _16_;
  assign _20_ = i_input[6] | i_input[7];
  assign _21_ = _05_ | _20_;
  assign _22_ = _14_ | _21_;
  assign _23_ = ~_22_;
  assign o_overflow = i_input[8] & _23_;
  assign _24_ = i_input[7] & _19_;
  assign o_output[7] = o_overflow | _24_;
  assign o_output[8] = i_input[8] & _22_;
endmodule

module exe_unit_rtl(i_argA, i_argB, i_oper, o_result, o_vf, o_pf, o_nf, o_of);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  wire _300_;
  wire _301_;
  wire _302_;
  wire _303_;
  wire _304_;
  wire _305_;
  wire _306_;
  wire _307_;
  wire _308_;
  wire _309_;
  wire _310_;
  wire _311_;
  wire _312_;
  wire _313_;
  wire _314_;
  input [8:0] i_argA;
  input [8:0] i_argB;
  input [3:0] i_oper;
  output o_nf;
  output o_of;
  output o_pf;
  output [8:0] o_result;
  output o_vf;
  wire [8:0] s_adder;
  wire s_adder_vf;
  wire [8:0] s_arythm_shift;
  wire [8:0] s_count;
  wire s_count_vf;
  wire [2:0] s_crc3;
  wire [3:0] s_crc4;
  wire s_nf;
  wire [8:0] s_onehot;
  wire s_onehot_vf;
  wire s_pf;
  wire [8:0] s_smtou2;
  wire [8:0] s_thermo;
  wire [8:0] s_u2tou1;
  wire s_u2tou1_ovf;
  assign _000_ = ~i_oper[0];
  assign _001_ = ~i_oper[1];
  assign _002_ = ~i_oper[2];
  assign _003_ = ~i_oper[3];
  assign _004_ = ~i_argB[3];
  assign _005_ = ~i_argB[0];
  assign _006_ = ~i_argB[1];
  assign _007_ = ~i_argB[2];
  assign _008_ = ~i_argB[4];
  assign _009_ = i_oper[2] & _003_;
  assign _010_ = i_oper[0] & i_oper[1];
  assign _011_ = _009_ & _010_;
  assign _012_ = s_crc3[1] & _011_;
  assign _013_ = i_oper[0] & _001_;
  assign _014_ = _009_ & _013_;
  assign _015_ = s_u2tou1[1] & _014_;
  assign _016_ = _000_ & _001_;
  assign _017_ = _002_ & i_oper[3];
  assign _018_ = _016_ & _017_;
  assign _019_ = s_crc4[1] & _018_;
  assign _020_ = _015_ | _019_;
  assign _021_ = _012_ | _020_;
  assign _022_ = _002_ & _003_;
  assign _023_ = _016_ & _022_;
  assign _024_ = s_adder[1] & _023_;
  assign _025_ = _000_ & i_oper[1];
  assign _026_ = _017_ & _025_;
  assign _027_ = s_thermo[1] & _026_;
  assign _028_ = _024_ | _027_;
  assign _029_ = _013_ & _017_;
  assign _030_ = s_count[1] & _029_;
  assign _031_ = _010_ & _017_;
  assign _032_ = s_onehot[1] & _031_;
  assign _033_ = _030_ | _032_;
  assign _034_ = _028_ | _033_;
  assign _035_ = i_argA[1] | i_argB[1];
  assign _036_ = ~_035_;
  assign _037_ = _013_ & _022_;
  assign _038_ = _036_ | _037_;
  assign _039_ = _022_ & _025_;
  assign _040_ = _035_ | _039_;
  assign _041_ = _038_ & _040_;
  assign _042_ = _010_ & _022_;
  assign _043_ = s_arythm_shift[1] & _042_;
  assign _044_ = _009_ & _025_;
  assign _045_ = s_smtou2[1] & _044_;
  assign _046_ = _043_ | _045_;
  assign _047_ = _041_ | _046_;
  assign _048_ = _034_ | _047_;
  assign _049_ = _021_ | _048_;
  assign _050_ = _009_ & _016_;
  assign _051_ = _008_ & _050_;
  assign _052_ = _004_ & _051_;
  assign _053_ = i_argB[2] & _052_;
  assign _054_ = i_argB[6] | i_argB[5];
  assign _055_ = ~_054_;
  assign _056_ = i_argB[8] | i_argB[7];
  assign _057_ = ~_056_;
  assign _058_ = _055_ & _057_;
  assign _059_ = _005_ & i_argA[5];
  assign _060_ = i_argB[0] & i_argA[6];
  assign _061_ = _059_ | _060_;
  assign _062_ = _058_ & _061_;
  assign _063_ = _006_ & _062_;
  assign _064_ = _005_ & i_argA[7];
  assign _065_ = i_argB[0] & i_argA[8];
  assign _066_ = _064_ | _065_;
  assign _067_ = _058_ & _066_;
  assign _068_ = i_argB[1] & _067_;
  assign _069_ = _063_ | _068_;
  assign _070_ = _053_ & _069_;
  assign _071_ = _007_ & _052_;
  assign _072_ = i_argA[1] & _005_;
  assign _073_ = i_argA[2] & i_argB[0];
  assign _074_ = _072_ | _073_;
  assign _075_ = _006_ & _074_;
  assign _076_ = _005_ & i_argA[3];
  assign _077_ = i_argB[0] & i_argA[4];
  assign _078_ = _076_ | _077_;
  assign _079_ = _058_ & _078_;
  assign _080_ = i_argB[1] & _078_;
  assign _081_ = _075_ | _080_;
  assign _082_ = _058_ & _081_;
  assign _083_ = _071_ & _082_;
  assign _084_ = _070_ | _083_;
  assign o_result[1] = _049_ | _084_;
  assign _085_ = i_argB[0] | i_argA[4];
  assign _086_ = _005_ | i_argA[5];
  assign _087_ = _085_ & _086_;
  assign _088_ = _058_ & _087_;
  assign _089_ = i_argB[1] | _088_;
  assign _090_ = _005_ & i_argA[6];
  assign _091_ = i_argB[0] & i_argA[7];
  assign _092_ = _090_ | _091_;
  assign _093_ = _058_ & _092_;
  assign _094_ = _006_ | _093_;
  assign _095_ = _089_ & _094_;
  assign _096_ = i_argB[2] & _095_;
  assign _097_ = i_argA[2] | i_argB[0];
  assign _098_ = _005_ | i_argA[3];
  assign _099_ = _097_ & _098_;
  assign _100_ = i_argB[1] & _099_;
  assign _101_ = i_argB[0] | i_argA[0];
  assign _102_ = ~_101_;
  assign _103_ = _006_ & _101_;
  assign _104_ = _100_ | _103_;
  assign _105_ = _005_ | _035_;
  assign _106_ = _007_ & _058_;
  assign _107_ = _105_ & _106_;
  assign _108_ = _104_ & _107_;
  assign _109_ = _096_ | _108_;
  assign _110_ = _052_ & _109_;
  assign _111_ = _039_ & _102_;
  assign _112_ = s_u2tou1[0] & _014_;
  assign _113_ = _111_ | _112_;
  assign _114_ = s_adder[0] & _023_;
  assign _115_ = s_crc3[0] & _011_;
  assign _116_ = _114_ | _115_;
  assign _117_ = _113_ | _116_;
  assign _118_ = s_count[0] & _029_;
  assign _119_ = s_arythm_shift[0] & _042_;
  assign _120_ = _118_ | _119_;
  assign _121_ = s_thermo[0] & _026_;
  assign _122_ = s_crc4[0] & _018_;
  assign _123_ = _121_ | _122_;
  assign _124_ = _120_ | _123_;
  assign _125_ = _117_ | _124_;
  assign _126_ = _005_ & i_argA[8];
  assign _127_ = _058_ & _126_;
  assign _128_ = _006_ & _127_;
  assign _129_ = i_argB[3] & _007_;
  assign _130_ = _051_ & _129_;
  assign _131_ = _128_ & _130_;
  assign _132_ = s_smtou2[0] & _044_;
  assign _133_ = _037_ & _101_;
  assign _134_ = s_onehot[0] & _031_;
  assign _135_ = _133_ | _134_;
  assign _136_ = _132_ | _135_;
  assign _137_ = _131_ | _136_;
  assign _138_ = _125_ | _137_;
  assign o_result[0] = _110_ | _138_;
  assign _139_ = s_arythm_shift[2] & _042_;
  assign _140_ = s_thermo[2] & _026_;
  assign _141_ = s_count[2] & _029_;
  assign _142_ = _140_ | _141_;
  assign _143_ = _139_ | _142_;
  assign _144_ = s_crc3[2] & _011_;
  assign _145_ = i_argA[2] | i_argB[2];
  assign _146_ = ~_145_;
  assign _147_ = _037_ & _145_;
  assign _148_ = _144_ | _147_;
  assign _149_ = s_adder[2] & _023_;
  assign _150_ = s_smtou2[2] & _044_;
  assign _151_ = _149_ | _150_;
  assign _152_ = _148_ | _151_;
  assign _153_ = s_crc4[2] & _018_;
  assign _154_ = s_onehot[2] & _031_;
  assign _155_ = _153_ | _154_;
  assign _156_ = _039_ & _146_;
  assign _157_ = s_u2tou1[2] & _014_;
  assign _158_ = _156_ | _157_;
  assign _159_ = _155_ | _158_;
  assign _160_ = _152_ | _159_;
  assign _161_ = _143_ | _160_;
  assign _162_ = i_argB[1] | _093_;
  assign _163_ = _006_ | _127_;
  assign _164_ = _162_ & _163_;
  assign _165_ = _053_ & _164_;
  assign _166_ = i_argB[1] & _087_;
  assign _167_ = _006_ & _099_;
  assign _168_ = _166_ | _167_;
  assign _169_ = _058_ & _168_;
  assign _170_ = _071_ & _169_;
  assign _171_ = _165_ | _170_;
  assign o_result[2] = _161_ | _171_;
  assign _172_ = s_thermo[3] & _026_;
  assign _173_ = s_count[3] & _029_;
  assign _174_ = i_argB[3] | i_argA[3];
  assign _175_ = ~_174_;
  assign _176_ = _037_ & _174_;
  assign _177_ = s_crc4[3] & _018_;
  assign _178_ = s_u2tou1[3] & _014_;
  assign _179_ = _039_ & _175_;
  assign _180_ = s_arythm_shift[3] & _042_;
  assign _181_ = s_onehot[3] & _031_;
  assign _182_ = s_smtou2[3] & _044_;
  assign _183_ = s_adder[3] & _023_;
  assign _184_ = _178_ | _182_;
  assign _185_ = _176_ | _184_;
  assign _186_ = _172_ | _179_;
  assign _187_ = _185_ | _186_;
  assign _188_ = _177_ | _180_;
  assign _189_ = _173_ | _183_;
  assign _190_ = _181_ | _189_;
  assign _191_ = _188_ | _190_;
  assign _192_ = _187_ | _191_;
  assign _193_ = _006_ & _079_;
  assign _194_ = i_argB[1] & _062_;
  assign _195_ = _193_ | _194_;
  assign _196_ = _071_ & _195_;
  assign _197_ = _006_ & _067_;
  assign _198_ = _053_ & _197_;
  assign _199_ = _196_ | _198_;
  assign o_result[3] = _192_ | _199_;
  assign _200_ = s_thermo[4] & _026_;
  assign _201_ = s_adder[4] & _023_;
  assign _202_ = s_smtou2[4] & _044_;
  assign _203_ = i_argA[4] | i_argB[4];
  assign _204_ = ~_203_;
  assign _205_ = _039_ & _204_;
  assign _206_ = s_count[4] & _029_;
  assign _207_ = s_onehot[4] & _031_;
  assign _208_ = _037_ & _203_;
  assign _209_ = _207_ | _208_;
  assign _210_ = s_arythm_shift[4] & _042_;
  assign _211_ = s_u2tou1[4] & _014_;
  assign _212_ = _201_ | _209_;
  assign _213_ = _205_ | _210_;
  assign _214_ = _200_ | _213_;
  assign _215_ = _206_ | _211_;
  assign _216_ = _202_ | _215_;
  assign _217_ = _214_ | _216_;
  assign _218_ = _212_ | _217_;
  assign _219_ = _071_ & _095_;
  assign _220_ = _053_ & _128_;
  assign _221_ = _219_ | _220_;
  assign o_result[4] = _218_ | _221_;
  assign _222_ = _069_ & _071_;
  assign _223_ = s_count[5] & _029_;
  assign _224_ = i_argB[5] | i_argA[5];
  assign _225_ = ~_224_;
  assign _226_ = _039_ & _225_;
  assign _227_ = s_onehot[5] & _031_;
  assign _228_ = s_adder[5] & _023_;
  assign _229_ = s_thermo[5] & _026_;
  assign _230_ = s_smtou2[5] & _044_;
  assign _231_ = _037_ & _224_;
  assign _232_ = s_u2tou1[5] & _014_;
  assign _233_ = s_arythm_shift[5] & _042_;
  assign _234_ = _223_ | _232_;
  assign _235_ = _228_ | _234_;
  assign _236_ = _227_ | _230_;
  assign _237_ = _229_ | _236_;
  assign _238_ = _226_ | _233_;
  assign _239_ = _231_ | _238_;
  assign _240_ = _237_ | _239_;
  assign _241_ = _235_ | _240_;
  assign o_result[5] = _222_ | _241_;
  assign _242_ = _071_ & _164_;
  assign _243_ = s_smtou2[6] & _044_;
  assign _244_ = s_u2tou1[6] & _014_;
  assign _245_ = _243_ | _244_;
  assign _246_ = s_thermo[6] & _026_;
  assign _247_ = s_count[6] & _029_;
  assign _248_ = s_arythm_shift[6] & _042_;
  assign _249_ = i_argB[6] | i_argA[6];
  assign _250_ = ~_249_;
  assign _251_ = _039_ & _250_;
  assign _252_ = s_adder[6] & _023_;
  assign _253_ = s_onehot[6] & _031_;
  assign _254_ = _037_ & _249_;
  assign _255_ = _245_ | _247_;
  assign _256_ = _252_ | _253_;
  assign _257_ = _246_ | _256_;
  assign _258_ = _248_ | _251_;
  assign _259_ = _254_ | _258_;
  assign _260_ = _257_ | _259_;
  assign _261_ = _255_ | _260_;
  assign o_result[6] = _242_ | _261_;
  assign _262_ = _071_ & _197_;
  assign _263_ = s_adder[7] & _023_;
  assign _264_ = s_thermo[7] & _026_;
  assign _265_ = s_onehot[7] & _031_;
  assign _266_ = _264_ | _265_;
  assign _267_ = _263_ | _266_;
  assign _268_ = s_u2tou1[7] & _014_;
  assign _269_ = s_smtou2[7] & _044_;
  assign _270_ = _268_ | _269_;
  assign _271_ = s_arythm_shift[7] & _042_;
  assign _272_ = i_argB[7] | i_argA[7];
  assign _273_ = ~_272_;
  assign _274_ = _039_ & _273_;
  assign _275_ = _271_ | _274_;
  assign _276_ = s_count[7] & _029_;
  assign _277_ = _037_ & _272_;
  assign _278_ = _270_ | _276_;
  assign _279_ = _275_ | _277_;
  assign _280_ = _267_ | _279_;
  assign _281_ = _278_ | _280_;
  assign o_result[7] = _262_ | _281_;
  assign _282_ = _071_ & _128_;
  assign _283_ = s_onehot[8] & _031_;
  assign _284_ = s_thermo[8] & _026_;
  assign _285_ = _283_ | _284_;
  assign _286_ = i_argB[8] | i_argA[8];
  assign _287_ = ~_286_;
  assign _288_ = _037_ & _286_;
  assign _289_ = _285_ | _288_;
  assign _290_ = s_count[8] & _029_;
  assign _291_ = s_arythm_shift[8] & _042_;
  assign _292_ = _290_ | _291_;
  assign _293_ = s_smtou2[8] & _044_;
  assign _294_ = _039_ & _287_;
  assign _295_ = _293_ | _294_;
  assign _296_ = s_adder[8] & _023_;
  assign _297_ = s_u2tou1[8] & _014_;
  assign _298_ = _296_ | _297_;
  assign _299_ = _295_ | _298_;
  assign _300_ = _292_ | _299_;
  assign _301_ = _289_ | _300_;
  assign o_result[8] = _282_ | _301_;
  assign _302_ = o_result[5] & o_result[6];
  assign _303_ = o_result[7] & o_result[8];
  assign _304_ = _302_ & _303_;
  assign _305_ = o_result[1] & o_result[2];
  assign _306_ = o_result[3] & o_result[4];
  assign _307_ = _305_ & _306_;
  assign _308_ = o_result[0] & _307_;
  assign o_of = _304_ & _308_;
  assign _309_ = s_adder_vf & _023_;
  assign _310_ = s_count_vf & _029_;
  assign _311_ = _309_ | _310_;
  assign _312_ = s_onehot_vf & _031_;
  assign _313_ = s_u2tou1_ovf & _014_;
  assign _314_ = _312_ | _313_;
  assign o_vf = _311_ | _314_;
  \$paramod\arythm_shift\BITS=s32'00000000000000000000000000001001  u_arythm_shift (
    .i_a(i_argA),
    .i_b(i_argB),
    .o_output(s_arythm_shift)
  );
  \$paramod\binary2onehot\BITS=s32'00000000000000000000000000001001  u_binary2onehot (
    .i_nkb(i_argA),
    .o_onehot(s_onehot),
    .o_overflow(s_onehot_vf)
  );
  \$paramod\count_0\BITS=s32'00000000000000000000000000001001  u_count_0 (
    .i_input1(i_argA),
    .i_input2(i_argB),
    .o_output(s_count),
    .o_overflow(s_count_vf)
  );
  \$paramod$c9a09743ea5afa802f8298da4bb6a02b624bef2c\crc3  u_crc_3 (
    .i_crc(3'h0),
    .i_data(i_argA),
    .i_poly(i_argB[3:0]),
    .o_crc(s_crc3)
  );
  \$paramod$8c512a4640814fe56708630ae6c585cda538d971\crc4  u_crc_4 (
    .i_crc(4'h0),
    .i_data(i_argA),
    .i_poly(i_argB[4:0]),
    .o_crc(s_crc4)
  );
  \$paramod\fulladder\BITS=s32'00000000000000000000000000001001  u_fulladder (
    .i_a(i_argA),
    .i_b(i_argB),
    .o_carry(s_adder_vf),
    .o_sum(s_adder)
  );
  \$paramod\pf_nf\BITS=s32'00000000000000000000000000001001  u_pf_nf (
    .i_input(o_result),
    .o_nf(s_nf),
    .o_pf(s_pf)
  );
  \$paramod\sm_to_u2\BITS=s32'00000000000000000000000000001001  u_sm_to_u2 (
    .i_input(i_argA),
    .o_output(s_smtou2)
  );
  \$paramod\thermo2bin\LEN=s32'00000000000000000000000000001001  u_thermo2bin (
    .i_thermo(i_argA),
    .o_nkb(s_thermo)
  );
  \$paramod\u2tou1\BITS=s32'00000000000000000000000000001001  u_u2tou1 (
    .i_input(i_argA),
    .o_output(s_u2tou1),
    .o_overflow(s_u2tou1_ovf)
  );
  assign o_nf = s_nf;
  assign o_pf = s_pf;
endmodule
